{"version":3,"file":"app.1b514bc6458e3dc8eb4a.js","mappings":"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","sources":["webpack://my-webpack-project/./src/common/control.ts","webpack://my-webpack-project/./src/application/page.ts","webpack://my-webpack-project/./src/application/start-page.ts","webpack://my-webpack-project/./src/components/checkbox-form.ts","webpack://my-webpack-project/./src/components/checkbox-list.ts","webpack://my-webpack-project/./src/components/filter-block.ts","webpack://my-webpack-project/./src/components/double-range.ts","webpack://my-webpack-project/./src/components/filter-block-with-ranges.ts","webpack://my-webpack-project/./src/components/card.ts","webpack://my-webpack-project/./src/components/card-box.ts","webpack://my-webpack-project/./src/components/sort-select.ts","webpack://my-webpack-project/./src/application/toys-page.ts","webpack://my-webpack-project/./src/application/trees-page.ts","webpack://my-webpack-project/./src/components/route.ts","webpack://my-webpack-project/./src/model/filter.ts","webpack://my-webpack-project/./src/data.ts","webpack://my-webpack-project/./src/model/newDataModel.ts","webpack://my-webpack-project/./src/index.ts","webpack://my-webpack-project/./src/application/newApp.ts"],"sourcesContent":["class Control<NodeType extends HTMLElement = HTMLElement>{\r\n  public node: NodeType;\r\n\r\n  constructor(parentNode: HTMLElement | null, tagName = 'div', className = '', content = '') {\r\n    const el = document.createElement(tagName);\r\n    el.className = className;\r\n    el.innerHTML = content;\r\n    if (parentNode) {\r\n      parentNode.append(el);\r\n    }\r\n    this.node = el as NodeType;\r\n  }\r\n\r\n  destroy(): void {\r\n    this.node.remove();\r\n  }\r\n  \r\n}\r\n\r\nexport default Control;","import Control from '../common/control';\r\nimport { IToysData } from '../model/newDataModel';\r\nimport CardBox from '../components/card-box';\r\n\r\nexport default class Page extends Control{\r\n  updatePage(arg0: IToysData[]) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  onCheck: (type:string, value:string) => void;\r\n  onChange: (type:string, min:string, max:string) => void;\r\n  onReset: ()=>void;\r\n  onSelect: (num: string) => void;\r\n  \r\n  constructor(parentNode: HTMLElement, dataToys?:IToysData[]) {\r\n    super(parentNode, 'div', 'page'); //style.page);\r\n  }\r\n\r\n  \r\n\r\n\r\n/*\r\n  animateIn() {\r\n    return new Promise(resolve => {\r\n      this.node.ontransitionend = () => {\r\n        resolve(null);\r\n      }\r\n      requestAnimationFrame(() => {\r\n        requestAnimationFrame(() => {\r\n          this.node.style.transform = 'scale(1,1)';\r\n        })\r\n      })      \r\n    })    \r\n  }\r\n\r\n  animateOut() {\r\n    return new Promise(resolve => {\r\n      this.node.style.transform = 'scale(0,0)';\r\n      this.node.ontransitionend = () => {\r\n        resolve(null);\r\n      }\r\n    });\r\n  }\r\n  */\r\n}","import Control from '../common/control';\r\nimport Page from './page';\r\nimport ToysPage from './toys-page';\r\n\r\n\r\nexport default class HomePage extends Page {\r\n\r\n  main: Control<HTMLElement>;\r\n  title: Control<HTMLElement>;\r\n  startButton: Control<HTMLElement>;\r\n  footer: Control<HTMLElement>;\r\n  boxBall: Control<HTMLElement>;\r\n  \r\n  constructor(parentNode: HTMLElement) {\r\n    super(parentNode);\r\n    this.main = new Control(this.node, 'div', 'main-start-page');\r\n    this.boxBall = new Control(this.main.node, 'div', 'box-ball');\r\n    this.title = new Control(this.main.node, 'div', 'title-start-page', `Новогодняя игра <br/> \"Наряди ёлку\"`);\r\n    this.startButton = new Control(this.main.node, 'button', 'start-button', 'Начать');\r\n    this.footer = new Control(this.node, 'footer', 'footer', \r\n      `<span> 2021 </span>\r\n      <a class = \"github-logo\" href=\"#\"></a>\r\n      <a href=\"#\"><img src=\"./src/assets/svg/footer/rss_logo.svg\" alt=\"rsschool-logo\" >`);\r\n    this.startButton.node.onclick = () => {\r\n      this.onClick();\r\n    }\r\n  }\r\n  onClick() {\r\n      this.destroy();    \r\n      window.location.href = '#toys';\r\n  }\r\n}","import Control from '../common/control'\r\n\r\nexport default class FormCheck extends Control {\r\n  //onCheck: (type:string)=> void;\r\n  private labelCheck: Control<HTMLLabelElement>;\r\n  public inputCheck: Control<HTMLInputElement>;\r\n  //public valueForFilter: string;\r\n  onCheck: (type:string, value:string) => void;\r\n  type: string;\r\n  value: string;\r\n  constructor(parentNode: HTMLElement, type: string, typeForm: string, typeForFilter:string, checked:boolean) {\r\n    super(parentNode, 'label', `checkbox ${typeForm} ${type}`);\r\n    this.type = type;\r\n    this.value = typeForFilter;\r\n    /*this.labelCheck = new Control(this.node, 'label', 'checkbox', '');\r\n    this.labelCheck.node.classList.add(typeForm);\r\n    this.labelCheck.node.classList.add(type);*/\r\n    //this.valueForFilter = typeForFilter\r\n    this.inputCheck = new Control(this.node, 'input');\r\n    this.inputCheck.node.type = 'checkbox';\r\n    this.inputCheck.node.checked = checked;\r\n    //this.labelCheck.node.append(this.inputCheck.node);\r\n    this.inputCheck.node.onchange = () => {\r\n        this.onCheck(type, typeForFilter);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import Control from '../common/control';\r\nimport FormCheck from './checkbox-form';\r\n\r\ninterface IToyFilterData{\r\n  type: string,\r\n  filterType: string\r\n}\r\n\r\nexport default class CheckList extends Control{\r\n  onCheck: (type:string, value:string) => void;\r\n  check: FormCheck;\r\n  constructor(parentNode:HTMLElement, title:string, type: string, arrOfFilterValue:Array<IToyFilterData>, checked:string[]){\r\n    super(parentNode, 'div', 'select-block', title);\r\n    arrOfFilterValue.forEach((elem, index) => {\r\n      const checkedValue = (checked.includes(elem.filterType));\r\n      this.check = new FormCheck(this.node, type, elem.type, elem.filterType, checkedValue);\r\n      this.check.onCheck = (type:string, value) =>{\r\n        this.onCheck(type, value);\r\n        //const test = new Control(this.node, 'p','', str)\r\n      }\r\n      //this.node.append(check.node);\r\n  })\r\n}\r\n}\r\n\r\n\r\n","import Control from '../common/control';\r\nimport CheckList from './checkbox-list';\r\n\r\nconst forms = [\r\n  { type: 'ball', filterType: 'шар' },\r\n  { type: 'bell', filterType: 'колокольчик' },\r\n  { type: 'toy', filterType: 'фигурка' },\r\n  { type: 'snowflake', filterType: 'снежинка' },\r\n  { type: 'cone', filterType: 'шишка' }\r\n];\r\nconst color = [\r\n  { type: 'white', filterType: 'белый' },\r\n  { type: 'red', filterType: 'красный' },\r\n  { type: 'blue', filterType: 'синий' },\r\n  { type: 'yellow', filterType: 'желтый' },\r\n  { type: 'green', filterType: 'зелёный' }\r\n];\r\nconst size = [\r\n  { type: 'big', filterType: 'большой' },\r\n  { type: 'medium', filterType: 'средний' },\r\n  { type: 'small', filterType: 'малый' },\r\n];\r\n\r\nconst favorite = ['favorite'];\r\n\r\n\r\nexport default class FilterBlock extends Control {\r\n  public blockTitle: HTMLHeadingElement;\r\n  onCheck: (type: string, value: string) => void;\r\n  formFilter: CheckList;\r\n  colorFilter: CheckList;\r\n  sizeFilter: CheckList;\r\n  //public filters: HTMLDivElement[];\r\n  constructor(parentNode: HTMLElement, title: string, filter:Record<string, Array<string>> /*, arr:Array<CheckList>*/) {\r\n    super(parentNode, 'div', 'filter-block');\r\n    this.blockTitle = document.createElement('h2');\r\n    this.blockTitle.textContent = title;\r\n    this.node.append(this.blockTitle);\r\n\r\n    this.formFilter = new CheckList(this.node, 'Форма:', 'shape', forms, filter['shape']);\r\n\r\n    this.formFilter.onCheck = (str: string, value: string) => {\r\n      //const test = new Control(this.node, 'p','', str)\r\n      this.onCheck(str, value);\r\n    }\r\n    this.colorFilter = new CheckList(this.node, 'Цвет:', 'color', color, filter['color']);\r\n    this.colorFilter.onCheck = (str: string, value: string) => {\r\n      //const test = new Control(this.node, 'p','', str)\r\n      this.onCheck(str, value);\r\n    }\r\n    this.sizeFilter = new CheckList(this.node, 'Размер:', 'size', size, filter['size']);\r\n    this.sizeFilter.onCheck = (str: string, value: string) => {\r\n      //const test = new Control(this.node, 'p','', str)\r\n      this.onCheck(str, value);\r\n    }\r\n  }\r\n}\r\n\r\n","import Control from '../common/control'\r\n\r\n// <div class=\"container\">\r\n//   <input type=\"range\" min=\"0\" step=\"1\" max=\"10\" value=\"3\">\r\n//   <input type=\"range\" min=\"0\" step=\"1\" max=\"10\" value=\"7\">\r\n// </div>\r\n\r\n\r\nexport default class DoubleRange extends Control {\r\n  inputUp: Control<HTMLInputElement>;\r\n  inputDown: Control<HTMLInputElement>;\r\n  minValueText: Control<HTMLElement>;\r\n  maxValueText: Control<HTMLElement>;\r\n  containerRange: Control<HTMLElement>;\r\n  onChange: (type: string, min: string, max: string) => void;\r\n  constructor(parentNode: HTMLElement, type: string, min: string, max: string, step: string, minValue: string, maxValue: string) {\r\n    super(parentNode, 'div', 'double-range')\r\n    this.minValueText = new Control(this.node, 'span', 'value-range');\r\n\r\n    this.containerRange = new Control(this.node, 'div', 'container-range');\r\n    this.inputUp = new Control(this.containerRange.node, 'input');\r\n    this.inputDown = new Control(this.containerRange.node, 'input');\r\n    this.inputUp.node.type = 'range';\r\n    //this.inputUp.node.style.width = '75%';\r\n    this.inputUp.node.min = min;\r\n    this.inputUp.node.max = max;\r\n    this.inputUp.node.step = step;\r\n    this.inputUp.node.value = minValue;\r\n    this.inputDown.node.type = 'range';\r\n    this.inputDown.node.min = min;\r\n    this.inputDown.node.max = max;\r\n    this.inputDown.node.step = step;\r\n    this.inputDown.node.value = maxValue;\r\n\r\n    this.maxValueText = new Control(this.node, 'span', 'value-range');\r\n    // sliders[0].addEventListener('input', (e) => {\r\n    //   if(+sliders[0].value > +sliders[1].value){\r\n    //      sliders[1].value = +sliders[0].value;\r\n    //    }\r\n    //  });\r\n\r\n    //  sliders[1].addEventListener('input', (e) => {\r\n    //   if(+sliders[1].value < +sliders[0].value){\r\n    //      sliders[0].value = +sliders[1].value;\r\n    //    }\r\n    //  });\r\n\r\n    //  sliders.forEach((slider) => {\r\n    //    slider.addEventListener('change', () => {\r\n    //      console.log(`from ${sliders[0].value} to ${sliders[1].value}`);\r\n    //    })\r\n    //  });\r\n    //const changeValue = this.inputDown.node.width/+this.inputDown.node.max*+this.inputDown.node.value;\r\n    this.inputUp.node.oninput = () => {\r\n      this.setGradient();\r\n      this.setValueToSpan();\r\n\r\n      if (+this.inputUp.node.value > +this.inputDown.node.value) {\r\n        this.inputDown.node.value = this.inputUp.node.value;\r\n      }\r\n    }\r\n\r\n    this.inputDown.node.oninput = () => {\r\n      this.setGradient();\r\n      this.setValueToSpan();\r\n      if (+this.inputDown.node.value < +this.inputUp.node.value) {\r\n        this.inputUp.node.value = this.inputDown.node.value;\r\n      }\r\n    }\r\n\r\n    this.inputUp.node.onchange = () => {\r\n      this.onChange(type, this.inputUp.node.value, this.inputDown.node.value)\r\n    }\r\n\r\n    this.inputDown.node.onchange = () => {\r\n      console.log('max', this.inputDown.node.value);\r\n      this.onChange(type, this.inputUp.node.value, this.inputDown.node.value)\r\n    }\r\n  }\r\n\r\n  setValueToSpan() {\r\n    this.maxValueText.node.textContent = this.inputDown.node.value;\r\n    this.minValueText.node.textContent = this.inputUp.node.value;\r\n  }\r\n  setGradient() {\r\n    const changeValueUp = (+this.inputUp.node.value - +this.inputUp.node.min) * 100 / (+this.inputUp.node.max - +this.inputUp.node.min);\r\n    const changeValueDown = (+this.inputDown.node.value - +this.inputDown.node.min) * 100 / (+this.inputDown.node.max - +this.inputDown.node.min);//(+this.inputDown.node.value * 100 / +this.inputDown.node.max);\r\n    this.inputUp.node.style.background = `linear-gradient(90deg, #fff ${changeValueUp}%, #f00 ${changeValueUp}%, #f00 ${changeValueDown}%, #fff ${changeValueDown}%)`;\r\n    this.inputDown.node.style.background = `linear-gradient(90deg, #fff ${changeValueUp}%, #f00 ${changeValueUp}%, #f00 ${changeValueDown}%, #fff ${changeValueDown}%)`;\r\n  }\r\n}","import Control from \"../common/control\";\r\nimport DoubleRange from \"./double-range\";\r\n\r\nexport default class FilterBlockRange extends Control {\r\n  public blockTitle: HTMLHeadingElement;\r\n  rangeYears: DoubleRange;\r\n  onChange: (type:string, min:string, max: string) => void;\r\n  rangeCount: DoubleRange;\r\n  constructor(parentNode: HTMLElement, title: string, filter:Record<string, Array<string>> /*, arr:Array<CheckList>*/) {\r\n    super(parentNode, 'div', 'filter-block');\r\n\r\n    this.blockTitle = document.createElement('h2');\r\n    this.blockTitle.textContent = title;\r\n    this.node.append(this.blockTitle);\r\n\r\n    this.rangeCount = new DoubleRange(this.node, 'count', '0', '12', '1', filter['count'][0], filter['count'][1]);\r\n    let event = new Event('input');\r\n    this.rangeCount.inputUp.node.dispatchEvent(event);\r\n    this.rangeCount.inputDown.node.dispatchEvent(event);\r\n    this.rangeCount.onChange = (type:string, min:string, max:string) =>{\r\n      this.onChange(type, min, max);\r\n    }\r\n\r\n    this.rangeYears = new DoubleRange(this.node, 'year', '1940', '2020', '10', filter['year'][0], filter['year'][1]);\r\n    this.rangeYears.inputUp.node.dispatchEvent(event);\r\n    this.rangeYears.inputDown.node.dispatchEvent(event);\r\n    this.rangeYears.onChange = (type:string, min:string, max:string) =>{\r\n      this.onChange(type, min, max);\r\n    }\r\n  }\r\n}\r\n\r\n","import Control from '../common/control';\r\nimport { IToysData } from '../model/newDataModel'\r\n\r\nexport default class Card extends Control {\r\n  title: Control<HTMLHeadingElement>;\r\n  descriptions: Control<HTMLUListElement>;\r\n  count: Control<HTMLElement>;\r\n  shape: Control<HTMLElement>;\r\n  year: Control<HTMLElement>;\r\n  color: Control<HTMLElement>;\r\n  size: Control<HTMLElement>;\r\n  favorite: Control<HTMLElement>;\r\n  num: string;\r\n  select: Control<HTMLImageElement>;\r\n  onSelect: (num: string) => void;\r\n\r\n  constructor(parentNode: HTMLElement, dataCard: IToysData) {\r\n    super(parentNode, 'div', 'card');\r\n    this.title = new Control(this.node, 'h3', 'card-title', `${dataCard.name}`);\r\n    this.num = dataCard.num;\r\n    this.descriptions = new Control(this.node, 'ul', 'card-description');\r\n    this.count = new Control(this.descriptions.node, 'li', '', `Количество: ${dataCard.count} шт.`);\r\n    this.shape = new Control(this.descriptions.node, 'li', '', `Форма: ${dataCard.shape}`);\r\n    this.year = new Control(this.descriptions.node, 'li', '', `Год покупки: ${dataCard.year}`);\r\n    this.color = new Control(this.descriptions.node, 'li', '', `Цвет: ${dataCard.color}`);\r\n    this.size = new Control(this.descriptions.node, 'li', '', `Размер: ${dataCard.size}`);\r\n    this.favorite = new Control(this.descriptions.node, 'li', '', `Любимая: ${dataCard.favorite}`);\r\n    this.node.style.background = `rgba(36, 197, 219, 0.15) url('./assets/toys/${dataCard.num}.png') no-repeat 100% 50%/40%`;\r\n    this.select = new Control(this.node, 'div', 'select-img');\r\n    if (dataCard.selected == true) { this.select.node.classList.add('selected') }\r\n    else {\r\n      if (this.select.node.classList.contains('selected'))\r\n        this.select.node.classList.remove('selected');\r\n    }\r\n\r\n    \r\n    this.node.onclick = () => {\r\n      // if(this.select.node.classList.contains('selected')){\r\n      //   this.select.node.classList.remove('selected');\r\n      // }else{this.select.node.classList.add('selected');}\r\n      this.onSelect(this.num);\r\n      if (dataCard.selected == true) { this.select.node.classList.add('selected') }\r\n      else {\r\n        if (this.select.node.classList.contains('selected'))\r\n          this.select.node.classList.remove('selected');\r\n      }\r\n     // console.log('classlist', this.select.node.classList)\r\n\r\n    }\r\n  }\r\n}","import Control from '../common/control';\r\nimport Card from './card';\r\nimport { IToysData } from '../model/newDataModel';\r\n\r\nexport default class CardBox extends Control{\r\n  public blockTitle: Control<HTMLHeadingElement>;\r\n  toyCard: Card;\r\n  onSelect: (num:string)=>void;\r\n  //public filters: HTMLDivElement[];\r\n  constructor(parentNode:HTMLElement, toys:Array<IToysData>){\r\n    super(parentNode, 'div', 'card-box');\r\n    this.blockTitle = new Control(this.node, 'h1', 'title-card-box', 'Коробка с игрушками')\r\n    console.log('toys', toys); \r\n    toys.forEach(toy => {\r\n      this.toyCard = new Card(this.node, toy);\r\n      this.toyCard.onSelect = (num:string) =>{\r\n        this.onSelect(num);\r\n      }\r\n    });\r\n  }\r\n}","import Control from '../common/control'\r\n\r\nconst sortValues = ['По названию от А до Я',\r\n  'По названию от Я до А',\r\n  'Сначала новые',\r\n  'Сначала старые']\r\n\r\nexport default class SortSelect extends Control {\r\n  sortSelect: Control<HTMLSelectElement>;\r\n  resetButton: Control<HTMLElement>;\r\n  onClick: ()=>void;\r\n  searchInput: Control<HTMLInputElement>;\r\n  searchButton: Control<HTMLButtonElement>;\r\n  boxSearch: Control<HTMLElement>;\r\n  constructor(parentNode: HTMLElement) {\r\n    super(parentNode, 'div', 'filter-block');\r\n\r\n    const title = new Control(this.node, 'h2', '', 'Сортировка и поиск');\r\n\r\n    this.sortSelect = new Control(this.node, 'select', 'sort-select');\r\n    //this.sortSelect.node.type = 'select';\r\n    for (let i = 0; i < sortValues.length; i++) {\r\n      const option = document.createElement('option');\r\n      option.value = i.toString();\r\n      option.text = sortValues[i];\r\n      this.sortSelect.node.add(option);\r\n    }\r\n\r\n    this.boxSearch = new Control(this.node, 'div', 'box-search');\r\n    this.searchInput = new Control(this.boxSearch.node, 'input', 'search');\r\n    this.searchInput.node.type = 'search';\r\n    this.searchButton = new Control(this.boxSearch.node, 'button', 'search-button')\r\n\r\n\r\n\r\n    this.resetButton = new Control(this.node, 'button', 'reset-button', 'Сбросить фильтры');\r\n    this.resetButton.node.onclick = () => {\r\n      this.onClick();\r\n    } \r\n  \r\n  }\r\n}","import Control from '../common/control';\r\nimport Page from './page';\r\n\r\nimport CheckForm from '../components/checkbox-form';\r\nimport CheckList from '../components/checkbox-list';\r\nimport FilterBlock from '../components/filter-block';\r\nimport FilterBlockRange from '../components/filter-block-with-ranges'\r\nimport { ToysData, IToysData } from '../model/newDataModel';\r\nimport toysDataUrl from '../toys-data.json'\r\nimport Card from '../components/card'\r\nimport CardBox from '../components/card-box';\r\nimport SortSelect from '../components/sort-select';\r\nimport Fiter from '../model/filter';\r\n\r\n\r\nexport default class ToysPage extends Page {\r\n  filterByValue: FilterBlock;\r\n  onCheck: (type: string, value: string) => void;\r\n  cardBox: CardBox;\r\n  filterByRange: FilterBlockRange;\r\n  onChange: (type:string, min: string, max: string) => void;\r\n  filters: Control<HTMLElement>;\r\n  sortBlock: SortSelect;\r\n  onReset: () => void;\r\n  onSelect: (num:string) => void;\r\n  //updatePage: (filtredData: IToysData[]) => void;\r\n  \r\n\r\n  constructor(parentNode: HTMLElement, dataToys: IToysData[], filter: Record<string, Array<string>>) {\r\n    super(parentNode);\r\n\r\n    this.filters = new Control(this.node, 'div', 'filter-section');\r\n\r\n    this.filterByValue = new FilterBlock(this.filters.node, 'Фильтр по значению', filter);//, arrayOfFilter)\r\n    this.filterByValue.onCheck = (str: string, value: string) => {\r\n      this.onCheck(str, value);\r\n    }\r\n\r\n    this.filterByRange = new FilterBlockRange(this.filters.node, 'Фильтр по диапазону:', filter);\r\n    this.filterByRange.onChange = (type:string, min: string, max: string) => {\r\n      this.onChange(type, min, max)\r\n    }\r\n\r\n    this.sortBlock = new SortSelect(this.filters.node);\r\n    this.sortBlock.onClick = () => {\r\n      this.onReset();\r\n    }\r\n\r\n    this.cardBox = new CardBox(this.node, dataToys);\r\n    this.cardBox.onSelect = (num:string) => {\r\n      this.onSelect(num);\r\n    }\r\n  }\r\n\r\n  updatePage(filtredData: IToysData[]): void {\r\n    console.log('fdlkfjakl');\r\n\r\n    let currentBox = this.cardBox;\r\n    currentBox.destroy();\r\n   // this.cardBox.destroy();\r\n    this.cardBox = new CardBox(this.node, filtredData);\r\n    this.cardBox.onSelect = (num:string) => {\r\n      this.onSelect(num);\r\n    }\r\n\r\n  }\r\n\r\n}","import Control from '../common/control';\r\nimport Page from './page';\r\n\r\n\r\nexport default class TreesPage extends Page {\r\n  constructor(parentNode: HTMLElement) {\r\n    super(parentNode);\r\n  \r\n    const box = new Control(this.node, 'div', '', 'Ёлки');\r\n   \r\n  }\r\n}","import Control from '../common/control';\r\n\r\nexport default class Route extends Control {\r\n  homeLink: Control<HTMLAnchorElement>;\r\n  toysLink: Control<HTMLAnchorElement>;\r\n  treesLink: Control<HTMLAnchorElement>;\r\n  selectedToys: Control<HTMLDivElement>;\r\n // onHome: () => void;\r\n//  onToys: () => void;\r\n  constructor(parentNode: HTMLElement) {\r\n    super(parentNode, 'div', 'route-box');\r\n  \r\n    this.homeLink = new Control<HTMLAnchorElement>(this.node, 'a', 'link',`Home`);\r\n    this.homeLink.node.href = `#home`;\r\n    //this.homeLink.node.onclick = () => { this.onHome() }\r\n    this.toysLink = new Control<HTMLAnchorElement>(this.node, 'a', 'link',`Toys`);\r\n    this.toysLink.node.href = `#toys`\r\n   // this.toysLink.node.onclick = () => { this.onToys() }\r\n    this.treesLink = new Control<HTMLAnchorElement>(this.node, 'a', 'link',`Trees`);\r\n    this.treesLink.node.href = `#trees`\r\n\r\n    \r\n\r\n    this.selectedToys = new Control(this.node, 'div', 'selected-toys-counter', '0');\r\n  \r\n  }\r\n}","import { IToysData } from \"./newDataModel\";\r\nconst defaultFilter: Record<string, Array<string>> = {\r\n  'shape': [],\r\n  'color': [],\r\n  'size': [],\r\n  'count': ['0', '12'],\r\n  'year': ['1940', '2020'],\r\n};\r\n\r\nexport default class Filter {\r\n  filterValues: Record<string, Array<string>>;\r\n  toys: IToysData[];\r\n  constructor(toys: IToysData[]) {\r\n    this.toys = toys;\r\n    this.loadFromLocalstorage();\r\n  }\r\n\r\n  filtrateData() {\r\n    let arr: Array<IToysData> = [];\r\n    let arr2: Array<IToysData> = [];\r\n    let arr3: Array<IToysData> = [];\r\n    let arr4: Array<IToysData> = [];\r\n\r\n    if (this.filterValues['shape'].length == 0 &&\r\n      this.filterValues['color'].length == 0 &&\r\n      this.filterValues['size'].length == 0) {\r\n      arr3 = this.toys;\r\n    } else {\r\n      if (this.filterValues['shape'].length) {\r\n        arr = this.toys.filter(value =>\r\n          !!this.filterValues['shape'].includes(value['shape']))\r\n      } else { arr = this.toys }\r\n      if (this.filterValues['color'].length) {\r\n        arr2 = arr.filter(value =>\r\n          !!this.filterValues['color'].includes(value['color']))\r\n      } else { arr2 = arr };\r\n      if (this.filterValues['size'].length) {\r\n        arr3 = arr2.filter(value =>\r\n          !!this.filterValues['size'].includes(value['size']))\r\n      } else { arr3 = arr2 };\r\n    }\r\n\r\n    arr4 = arr3.filter(value =>\r\n      (value['count'] >= +this.filterValues['count'][0] &&\r\n        value['count'] <= +this.filterValues['count'][1])\r\n      && (\r\n        value['year'] >= +this.filterValues['year'][0] &&\r\n        value['year'] <= +this.filterValues['year'][1]\r\n      )\r\n    )\r\n    return arr4;\r\n  }\r\n\r\n  selectToy(num: string) {\r\n    this.toys.map(item => {\r\n      if (item['num'] == num) {\r\n        item['selected'] = (item['selected'] == false);\r\n      }\r\n    })\r\n  }\r\n\r\n  countSelectedToys(): number {\r\n    let sum: number = 0;\r\n    this.toys.forEach((current) => {\r\n      if (current.selected == true) { sum++ }\r\n    })\r\n    return sum;\r\n  }\r\n\r\n  loadFromLocalstorage() {\r\n    const storageData: string | null = localStorage.getItem('filter');\r\n    if (storageData) {\r\n      // write data from localstorage;\r\n    } else {\r\n      //this.resetFilter();\r\n      this.filterValues = defaultFilter;\r\n    }\r\n  }\r\n\r\n  resetFilter() {\r\n    this.filterValues = {\r\n      'shape': [],\r\n      'color': [],\r\n      'size': [],\r\n      'count': ['0', '12'],\r\n      'year': ['1940', '2020'],\r\n    }\r\n    console.log('filtervalues', this.filterValues);\r\n  }\r\n\r\n  addFilterValue(type: string, value: string): void {\r\n    this.filterValues[type].push(value);\r\n  }\r\n\r\n  removeFilterValue(type: string, value: string): void {\r\n    const index = this.filterValues[type].indexOf(value);\r\n    this.filterValues[type].splice(index, 1);\r\n  }\r\n\r\n  changeFilterValue(type: string, min: string, max: string): void {\r\n    this.filterValues[type][0] = min;\r\n    this.filterValues[type][1] = max;\r\n  }\r\n}","const data = [\n  {\n    num: '1',\n    name: 'Большой шар с рисунком',\n    count: '2',\n    year: '1960',\n    shape: 'шар',\n    color: 'желтый',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '2',\n    name: 'Зелёный шар с цветами',\n    count: '5',\n    year: '2000',\n    shape: 'шар',\n    color: 'зелёный',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '3',\n    name: 'Красный матовый шар',\n    count: '3',\n    year: '1990',\n    shape: 'шар',\n    color: 'красный',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '4',\n    name: 'Сосулька красная',\n    count: '2',\n    year: '1980',\n    shape: 'фигурка',\n    color: 'красный',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '5',\n    name: 'Красный виноград',\n    count: '4',\n    year: '1980',\n    shape: 'фигурка',\n    color: 'красный',\n    size: 'средний',\n    favorite: true,\n  },\n  {\n    num: '6',\n    name: 'Красный шар с рисунком',\n    count: '6',\n    year: '2010',\n    shape: 'шар',\n    color: 'красный',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '7',\n    name: 'Молочно-белый шар',\n    count: '12',\n    year: '1960',\n    shape: 'шар',\n    color: 'белый',\n    size: 'средний',\n    favorite: true,\n  },\n  {\n    num: '8',\n    name: 'Красный шар',\n    count: '10',\n    year: '2010',\n    shape: 'шар',\n    color: 'красный',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '9',\n    name: 'Колокольчик старинный',\n    count: '2',\n    year: '1950',\n    shape: 'колокольчик',\n    color: 'белый',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '10',\n    name: 'Белый шар ретро',\n    count: '7',\n    year: '1960',\n    shape: 'шар',\n    color: 'белый',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '11',\n    name: 'Шишка еловая белая',\n    count: '11',\n    year: '1960',\n    shape: 'шишка',\n    color: 'белый',\n    size: 'малый',\n    favorite: false,\n  },\n  {\n    num: '12',\n    name: 'Белый шар с цветами',\n    count: '5',\n    year: '1980',\n    shape: 'шар',\n    color: 'белый',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '13',\n    name: 'Шар расписной Река',\n    count: '3',\n    year: '1970',\n    shape: 'шар',\n    color: 'синий',\n    size: 'большой',\n    favorite: true,\n  },\n  {\n    num: '14',\n    name: 'Шар расписной Деревня',\n    count: '4',\n    year: '1970',\n    shape: 'шар',\n    color: 'синий',\n    size: 'большой',\n    favorite: true,\n  },\n  {\n    num: '15',\n    name: 'Колокольчик расписной',\n    count: '3',\n    year: '1970',\n    shape: 'колокольчик',\n    color: 'синий',\n    size: 'средний',\n    favorite: false,\n  },\n  {\n    num: '16',\n    name: 'Шишка расписная Пейзаж',\n    count: '3',\n    year: '1970',\n    shape: 'шишка',\n    color: 'синий',\n    size: 'средний',\n    favorite: true,\n  },\n  {\n    num: '17',\n    name: 'Шишка расписная',\n    count: '7',\n    year: '1970',\n    shape: 'шишка',\n    color: 'красный',\n    size: 'средний',\n    favorite: false,\n  },\n  {\n    num: '18',\n    name: 'Желтый шар с бантом',\n    count: '2',\n    year: '2010',\n    shape: 'шар',\n    color: 'желтый',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '19',\n    name: 'Желтый шар с паетками',\n    count: '12',\n    year: '1980',\n    shape: 'шар',\n    color: 'желтый',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '20',\n    name: 'Красный шар с бантом',\n    count: '8',\n    year: '1950',\n    shape: 'шар',\n    color: 'красный',\n    size: 'средний',\n    favorite: true,\n  },\n  {\n    num: '21',\n    name: 'Красный шар с звёздами',\n    count: '4',\n    year: '1970',\n    shape: 'шар',\n    color: 'красный',\n    size: 'большой',\n    favorite: true,\n  },\n  {\n    num: '22',\n    name: 'Шишка еловая золотая',\n    count: '11',\n    year: '1990',\n    shape: 'шишка',\n    color: 'желтый',\n    size: 'малый',\n    favorite: false,\n  },\n  {\n    num: '23',\n    name: 'Колокольчик старинный',\n    count: '9',\n    year: '1950',\n    shape: 'колокольчик',\n    color: 'желтый',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '24',\n    name: 'Снежинка изящная',\n    count: '1',\n    year: '1940',\n    shape: 'снежинка',\n    color: 'белый',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '25',\n    name: 'Розовый шар с блёстками',\n    count: '12',\n    year: '2010',\n    shape: 'шар',\n    color: 'красный',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '26',\n    name: 'Рубиново-золотой шар',\n    count: '8',\n    year: '1960',\n    shape: 'шар',\n    color: 'желтый',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '27',\n    name: 'Красный шар с узором',\n    count: '4',\n    year: '2010',\n    shape: 'шар',\n    color: 'красный',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '28',\n    name: 'Бордовый шар с узором',\n    count: '10',\n    year: '2010',\n    shape: 'шар',\n    color: 'красный',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '29',\n    name: 'Старинный шар с цветами',\n    count: '5',\n    year: '1950',\n    shape: 'шар',\n    color: 'желтый',\n    size: 'большой',\n    favorite: true,\n  },\n  {\n    num: '30',\n    name: 'Старинный шар с узором',\n    count: '8',\n    year: '1950',\n    shape: 'шар',\n    color: 'желтый',\n    size: 'большой',\n    favorite: true,\n  },\n  {\n    num: '31',\n    name: 'Красный шар с блёстками',\n    count: '8',\n    year: '2010',\n    shape: 'шар',\n    color: 'красный',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '32',\n    name: 'Синий шар Вселенная',\n    count: '11',\n    year: '1970',\n    shape: 'шар',\n    color: 'синий',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '33',\n    name: 'Синий шар со снежинкой',\n    count: '6',\n    year: '2010',\n    shape: 'шар',\n    color: 'синий',\n    size: 'средний',\n    favorite: false,\n  },\n  {\n    num: '34',\n    name: 'Зелёный  шар с узором',\n    count: '8',\n    year: '2010',\n    shape: 'шар',\n    color: 'зелёный',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '35',\n    name: 'Фигурка Лис в шарфе',\n    count: '8',\n    year: '1950',\n    shape: 'фигурка',\n    color: 'желтый',\n    size: 'средний',\n    favorite: true,\n  },\n  {\n    num: '36',\n    name: 'Сиреневый шар Метель',\n    count: '1',\n    year: '2000',\n    shape: 'шар',\n    color: 'синий',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '37',\n    name: 'Зелёный  шар Метель',\n    count: '6',\n    year: '2000',\n    shape: 'шар',\n    color: 'зелёный',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '38',\n    name: 'Голубой  шар Метель',\n    count: '6',\n    year: '2000',\n    shape: 'шар',\n    color: 'синий',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '39',\n    name: 'Красная снежинка',\n    count: '6',\n    year: '1990',\n    shape: 'снежинка',\n    color: 'красный',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '40',\n    name: 'Снежинка золотая',\n    count: '12',\n    year: '2020',\n    shape: 'снежинка',\n    color: 'желтый',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '41',\n    name: 'Снежинка арктическая',\n    count: '11',\n    year: '2020',\n    shape: 'снежинка',\n    color: 'белый',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '42',\n    name: 'Зелёный шар',\n    count: '10',\n    year: '1980',\n    shape: 'шар',\n    color: 'зелёный',\n    size: 'средний',\n    favorite: false,\n  },\n  {\n    num: '43',\n    name: 'Снежинка двухцветная',\n    count: '6',\n    year: '1960',\n    shape: 'снежинка',\n    color: 'красный',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '44',\n    name: 'Фигурка Ангела',\n    count: '11',\n    year: '1940',\n    shape: 'фигурка',\n    color: 'красный',\n    size: 'средний',\n    favorite: true,\n  },\n  {\n    num: '45',\n    name: 'Снежинка новогодняя',\n    count: '1',\n    year: '1980',\n    shape: 'снежинка',\n    color: 'белый',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '46',\n    name: 'Фигурка Мухомор',\n    count: '10',\n    year: '1950',\n    shape: 'фигурка',\n    color: 'красный',\n    size: 'малый',\n    favorite: false,\n  },\n  {\n    num: '47',\n    name: 'Фигурка Колодец',\n    count: '6',\n    year: '1950',\n    shape: 'фигурка',\n    color: 'красный',\n    size: 'малый',\n    favorite: false,\n  },\n  {\n    num: '48',\n    name: 'Желтый шар с бантом',\n    count: '6',\n    year: '1960',\n    shape: 'шар',\n    color: 'желтый',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '49',\n    name: 'Снежинка с бирюзой',\n    count: '4',\n    year: '1980',\n    shape: 'снежинка',\n    color: 'желтый',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '50',\n    name: 'Колокольчик большой',\n    count: '3',\n    year: '2020',\n    shape: 'колокольчик',\n    color: 'красный',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '51',\n    name: 'Шишка с изморозью',\n    count: '12',\n    year: '1970',\n    shape: 'шишка',\n    color: 'красный',\n    size: 'малый',\n    favorite: false,\n  },\n  {\n    num: '52',\n    name: 'Красный шар с надписью',\n    count: '12',\n    year: '1990',\n    shape: 'шар',\n    color: 'красный',\n    size: 'большой',\n    favorite: true,\n  },\n  {\n    num: '53',\n    name: 'Снежинка серебристая',\n    count: '6',\n    year: '2020',\n    shape: 'снежинка',\n    color: 'белый',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '54',\n    name: 'Зелёный шар с рисунком',\n    count: '6',\n    year: '2010',\n    shape: 'шар',\n    color: 'зелёный',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '55',\n    name: 'Пряничный домик',\n    count: '1',\n    year: '1940',\n    shape: 'фигурка',\n    color: 'желтый',\n    size: 'большой',\n    favorite: false,\n  },\n  {\n    num: '56',\n    name: 'Пряничный теремок',\n    count: '1',\n    year: '1940',\n    shape: 'фигурка',\n    color: 'желтый',\n    size: 'малый',\n    favorite: false,\n  },\n  {\n    num: '57',\n    name: 'Пряничная избушка',\n    count: '1',\n    year: '1940',\n    shape: 'фигурка',\n    color: 'желтый',\n    size: 'средний',\n    favorite: false,\n  },\n  {\n    num: '58',\n    name: 'Фигурка белого медведя',\n    count: '2',\n    year: '1980',\n    shape: 'фигурка',\n    color: 'белый',\n    size: 'средний',\n    favorite: false,\n  },\n  {\n    num: '59',\n    name: 'Желтый шар с надписью',\n    count: '10',\n    year: '1990',\n    shape: 'шар',\n    color: 'желтый',\n    size: 'средний',\n    favorite: false,\n  },\n  {\n    num: '60',\n    name: 'Фигурка Голубь',\n    count: '12',\n    year: '1940',\n    shape: 'фигурка',\n    color: 'белый',\n    size: 'средний',\n    favorite: true,\n  },\n];\n\nexport default data;","import toysDataUrl from '../toys-data.json'\r\nimport Fiter from './filter';\r\nimport data from '../data'\r\n\r\nexport interface IToysData{\r\n  num: string,\r\n  name: string,\r\n  count: number,\r\n  year: number,\r\n  shape: string,\r\n  color: string,\r\n  size: string,\r\n  favorite: boolean,\r\n  selected: boolean\r\n}\r\n/*\r\ninterface IDataDto{\r\n  name: string,\r\n  count: string,\r\n  year: string,\r\n  shape: string,\r\n  color: string,\r\n  size: string,\r\n  favorite: boolean\r\n}\r\n\r\ntype IToysDto = Record<string, IDataDto>\r\n*/\r\n\r\nexport class ToysData {\r\n  data: Array<IToysData>;\r\n  constructor() {\r\n  }\r\n \r\n\r\n  loadData(){\r\n    const modelData:IToysData[] = data.map((it, index) => {\r\n      const item = data[index];\r\n      return {\r\n        num: item.num,\r\n        name: item.name,\r\n        count: Number(item.count),\r\n        year: Number(item.year),\r\n        shape: item.shape,\r\n        color: item.color,\r\n        size: item.size,\r\n        favorite: item.favorite,\r\n        selected: false\r\n      }\r\n    })\r\n    return modelData;\r\n  }\r\n\r\n  \r\n// private async loadData(url:string): Promise<Array<IToysData>> {\r\n//    return fetch(url).then(res=>res.json());\r\n/*.then((toysData: IToysDto)=>{\r\n      const modelData: Array<IToysData> = Object.keys(toysData).map(it=>{\r\n        const item = toysData[it];\r\n        const record: IToysData = {\r\n          name: item.name,\r\n          count: Number(item.count),\r\n          year: Number(item.year),\r\n          shape: item.shape,\r\n          color: item.color,\r\n          size: item.size,\r\n          favorite: item.favorite\r\n        };\r\n        return record;\r\n      });\r\n      return modelData;\r\n    });*/\r\n // } \r\n}","import './start-page.css';\nimport './settings-page.css';\nimport Application from './application/newApp'\n\n\nconst page = new Application(document.body);\n","import Control from '../common/control';\r\n//import * as style from './style.css';\r\nimport HomePage from './start-page';\r\nimport ToysPage from './toys-page';\r\nimport TreesPage from './trees-page';\r\nimport Route from '../components/route'\r\nimport Filter from '../model/filter'\r\nimport Page from './page';\r\nimport { ToysData, IToysData } from '../model/newDataModel'\r\n\r\ninterface IPageConstructor {\r\n  new(parentNode: HTMLElement, dataToys?: IToysData[], fiter?: Record<string, Array<string>>): Page;\r\n}\r\n\r\nexport default class Application extends Control {\r\n  currentPage: Page;\r\n  route: Route;\r\n  filterModel: Filter;\r\n  model: ToysData;\r\n  dataToys: IToysData[];\r\n  pages: Record<string, IPageConstructor>;\r\n\r\n  constructor(parentNode: HTMLElement) {\r\n    super(parentNode);\r\n\r\n    this.route = new Route(this.node);\r\n\r\n    this.pages = {\r\n      '#home': HomePage,\r\n      '#toys': ToysPage,\r\n      '#trees': TreesPage,\r\n    }\r\n\r\n    this.model = new ToysData();\r\n    this.dataToys = this.model.loadData();\r\n\r\n\r\n    this.filterModel = new Filter(this.dataToys);\r\n\r\n    //this.route.selectedToys.node.innerText = '5';\r\n\r\n    window.onpopstate = this.loadWindow.bind(this);\r\n    this.loadWindow();\r\n  }\r\n\r\n\r\n  createPage() {\r\n    const filterToys = this.filterModel.filtrateData();\r\n    const filterValues = this.filterModel.filterValues;\r\n    const newPage = new (this.pages[window.location.hash] || HomePage)(this.node, filterToys, filterValues);\r\n    \r\n    newPage.onCheck = (type: string, value: string) => {\r\n      if (this.filterModel.filterValues[type].includes(value)) {\r\n        this.filterModel.removeFilterValue(type, value)\r\n      } else {\r\n        this.filterModel.addFilterValue(type, value);\r\n      }\r\n      newPage.updatePage(this.filterModel.filtrateData());\r\n    }\r\n\r\n    newPage.onChange = (type: string, min: string, max: string) => {\r\n      this.filterModel.changeFilterValue(type, min, max);\r\n      newPage.updatePage(this.filterModel.filtrateData());\r\n    }\r\n\r\n    newPage.onReset = () => {\r\n      this.filterModel.resetFilter();\r\n      newPage.destroy();\r\n      this.createPage();\r\n    }\r\n\r\n    newPage.onSelect = (num:string) => {\r\n      this.filterModel.selectToy(num);\r\n      //let counter = +this.route.selectedToys.node.textContent +1;\r\n      this.route.selectedToys.node.textContent =  this.filterModel.countSelectedToys().toString(); \r\n      newPage.updatePage(this.filterModel.filtrateData());\r\n\r\n    }\r\n\r\n    this.currentPage = newPage;\r\n  }\r\n\r\n  loadWindow() {\r\n    if (this.currentPage) {\r\n      let currentPage = this.currentPage;\r\n      currentPage.destroy();\r\n      this.createPage();\r\n    } else {\r\n      this.createPage();\r\n    }\r\n  }\r\n\r\n}\r\n"],"names":["parentNode","tagName","className","content","el","document","createElement","innerHTML","append","this","node","destroy","remove","dataToys","updatePage","arg0","Error","main","boxBall","title","startButton","footer","onclick","onClick","window","location","href","type","typeForm","typeForFilter","checked","value","inputCheck","onchange","onCheck","arrOfFilterValue","forEach","elem","index","checkedValue","includes","filterType","check","color","size","filter","blockTitle","textContent","formFilter","str","colorFilter","sizeFilter","min","max","step","minValue","maxValue","minValueText","containerRange","inputUp","inputDown","maxValueText","oninput","setGradient","setValueToSpan","onChange","console","log","changeValueUp","changeValueDown","style","background","rangeCount","event","Event","dispatchEvent","rangeYears","dataCard","name","num","descriptions","count","shape","year","favorite","select","selected","classList","add","contains","onSelect","toys","toy","toyCard","sortValues","sortSelect","i","length","option","toString","text","boxSearch","searchInput","searchButton","resetButton","filters","filterByValue","filterByRange","sortBlock","onReset","cardBox","filtredData","homeLink","toysLink","treesLink","selectedToys","defaultFilter","loadFromLocalstorage","filtrateData","arr","arr2","arr3","filterValues","selectToy","map","item","countSelectedToys","sum","current","localStorage","getItem","resetFilter","addFilterValue","push","removeFilterValue","indexOf","splice","changeFilterValue","loadData","it","Number","route","pages","model","ToysData","filterModel","onpopstate","loadWindow","bind","createPage","filterToys","newPage","hash","currentPage","body"],"sourceRoot":""}